@model BEP.BL.Models.ExternalLoginConfirmationViewModel

@{
  ViewBag.Title = "Registreren";
}

<div class="container">
    <div class="row group-shadow">
        <div class="col-xs-12">
            <h1>@ViewBag.Title</h1>
            <p class="subtitle-gray">Vervolledig je @ViewBag.LoginProvider account.</p>

            @using (Html.BeginForm("ExternalLoginConfirmation", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
            @Html.AntiForgeryToken()

            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <p class="text-info">
                U bent succesvol aangemeld via <strong>@ViewBag.LoginProvider</strong>.
                Vul hieronder uw gegevens in om de registratie te vervolledigen.
            </p>

            <div class="form-group">
                @Html.LabelFor(m => m.Firstname, "Voornaam *", new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Firstname, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Firstname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Lastname, "Achternaam *", new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Lastname, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Lastname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Zip, "Postcode *", new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Zip, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Zip)
                </div>
            </div>

                if (@ViewBag.LoginProvider.Equals("Google"))
                {
                <div class="form-group">

                    @Html.LabelFor(m => m.Email, "E-mail *", new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @readonly = "true" })
                    </div>
                </div>
                }
                else
                {
                <div class="form-group">

                    @Html.LabelFor(m => m.Email, "E-mail *", new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                }

            <div class="form-group">
                <div class="col-md-4">
                    <p>* Verplicht in te vullen.</p>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-2">
                    <input type="submit" class="btn btn-primary" value="Registreren" />
                </div>
            </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
